-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from InstantParser/ParInstant.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pStmt -> Stmt                               (1)
	%start_pListStmt -> ListStmt                       (2)
	%start_pExp1 -> Exp1                               (3)
	%start_pExp2 -> Exp2                               (4)
	%start_pExp3 -> Exp3                               (5)
	%start_pExp4 -> Exp4                               (6)
	%start_pExp -> Exp                                 (7)
	Ident -> L_Ident                                   (8)
	Integer -> L_integ                                 (9)
	Program -> ListStmt                                (10)
	Stmt -> Ident '=' Exp                              (11)
	Stmt -> Exp                                        (12)
	ListStmt ->                                        (13)
	ListStmt -> Stmt                                   (14)
	ListStmt -> Stmt ';' ListStmt                      (15)
	Exp1 -> Exp2 '+' Exp1                              (16)
	Exp1 -> Exp2                                       (17)
	Exp2 -> Exp2 '-' Exp3                              (18)
	Exp2 -> Exp3                                       (19)
	Exp3 -> Exp3 '*' Exp4                              (20)
	Exp3 -> Exp3 '/' Exp4                              (21)
	Exp3 -> Exp4                                       (22)
	Exp4 -> Integer                                    (23)
	Exp4 -> Ident                                      (24)
	Exp4 -> '(' Exp ')'                                (25)
	Exp -> Exp1                                        (26)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'+'            { PT _ (TS _ 4) }
	'-'            { PT _ (TS _ 5) }
	'/'            { PT _ (TS _ 6) }
	';'            { PT _ (TS _ 7) }
	'='            { PT _ (TS _ 8) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pStmt    rule  1
	%start_pListStmt rule  2
	%start_pExp1    rule  3
	%start_pExp2    rule  4
	%start_pExp3    rule  5
	%start_pExp4    rule  6
	%start_pExp     rule  7
	Ident           rule  8
	Integer         rule  9
	Program         rule  10
	Stmt            rules 11, 12
	ListStmt        rules 13, 14, 15
	Exp1            rules 16, 17
	Exp2            rules 18, 19
	Exp3            rules 20, 21, 22
	Exp4            rules 23, 24, 25
	Exp             rule  26

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18
	%eof           reduce using rule 13

	Ident          goto state 23
	Integer        goto state 11
	Program        goto state 28
	Stmt           goto state 24
	ListStmt       goto state 29
	Exp1           goto state 12
	Exp2           goto state 13
	Exp3           goto state 14
	Exp4           goto state 15
	Exp            goto state 26

State 1

	%start_pStmt -> . Stmt                              (rule 1)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 23
	Integer        goto state 11
	Stmt           goto state 27
	Exp1           goto state 12
	Exp2           goto state 13
	Exp3           goto state 14
	Exp4           goto state 15
	Exp            goto state 26

State 2

	%start_pListStmt -> . ListStmt                      (rule 2)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18
	%eof           reduce using rule 13

	Ident          goto state 23
	Integer        goto state 11
	Stmt           goto state 24
	ListStmt       goto state 25
	Exp1           goto state 12
	Exp2           goto state 13
	Exp3           goto state 14
	Exp4           goto state 15
	Exp            goto state 26

State 3

	%start_pExp1 -> . Exp1                              (rule 3)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Exp1           goto state 22
	Exp2           goto state 13
	Exp3           goto state 14
	Exp4           goto state 15

State 4

	%start_pExp2 -> . Exp2                              (rule 4)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Exp2           goto state 21
	Exp3           goto state 14
	Exp4           goto state 15

State 5

	%start_pExp3 -> . Exp3                              (rule 5)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Exp3           goto state 20
	Exp4           goto state 15

State 6

	%start_pExp4 -> . Exp4                              (rule 6)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Exp4           goto state 19

State 7

	%start_pExp -> . Exp                                (rule 7)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Exp1           goto state 12
	Exp2           goto state 13
	Exp3           goto state 14
	Exp4           goto state 15
	Exp            goto state 16

State 8

	Ident -> . L_Ident                                  (rule 8)

	L_Ident        shift, and enter state 9


State 9

	Ident -> L_Ident .                                  (rule 8)

	')'            reduce using rule 8
	'*'            reduce using rule 8
	'+'            reduce using rule 8
	'-'            reduce using rule 8
	'/'            reduce using rule 8
	';'            reduce using rule 8
	'='            reduce using rule 8
	%eof           reduce using rule 8


State 10

	Exp4 -> Ident .                                     (rule 24)

	')'            reduce using rule 24
	'*'            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'/'            reduce using rule 24
	';'            reduce using rule 24
	%eof           reduce using rule 24


State 11

	Exp4 -> Integer .                                   (rule 23)

	')'            reduce using rule 23
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'/'            reduce using rule 23
	';'            reduce using rule 23
	%eof           reduce using rule 23


State 12

	Exp -> Exp1 .                                       (rule 26)

	')'            reduce using rule 26
	';'            reduce using rule 26
	%eof           reduce using rule 26


State 13

	Exp1 -> Exp2 . '+' Exp1                             (rule 16)
	Exp1 -> Exp2 .                                      (rule 17)
	Exp2 -> Exp2 . '-' Exp3                             (rule 18)

	')'            reduce using rule 17
	'+'            shift, and enter state 36
	'-'            shift, and enter state 32
	';'            reduce using rule 17
	%eof           reduce using rule 17


State 14

	Exp2 -> Exp3 .                                      (rule 19)
	Exp3 -> Exp3 . '*' Exp4                             (rule 20)
	Exp3 -> Exp3 . '/' Exp4                             (rule 21)

	')'            reduce using rule 19
	'*'            shift, and enter state 33
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'/'            shift, and enter state 34
	';'            reduce using rule 19
	%eof           reduce using rule 19


State 15

	Exp3 -> Exp4 .                                      (rule 22)

	')'            reduce using rule 22
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'/'            reduce using rule 22
	';'            reduce using rule 22
	%eof           reduce using rule 22


State 16

	%start_pExp -> Exp .                                (rule 7)

	%eof           accept


State 17

	Exp4 -> '(' . Exp ')'                               (rule 25)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Exp1           goto state 12
	Exp2           goto state 13
	Exp3           goto state 14
	Exp4           goto state 15
	Exp            goto state 35

State 18

	Integer -> L_integ .                                (rule 9)

	')'            reduce using rule 9
	'*'            reduce using rule 9
	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'/'            reduce using rule 9
	';'            reduce using rule 9
	%eof           reduce using rule 9


State 19

	%start_pExp4 -> Exp4 .                              (rule 6)

	%eof           accept


State 20

	%start_pExp3 -> Exp3 .                              (rule 5)
	Exp3 -> Exp3 . '*' Exp4                             (rule 20)
	Exp3 -> Exp3 . '/' Exp4                             (rule 21)

	'*'            shift, and enter state 33
	'/'            shift, and enter state 34
	%eof           accept


State 21

	%start_pExp2 -> Exp2 .                              (rule 4)
	Exp2 -> Exp2 . '-' Exp3                             (rule 18)

	'-'            shift, and enter state 32
	%eof           accept


State 22

	%start_pExp1 -> Exp1 .                              (rule 3)

	%eof           accept


State 23

	Stmt -> Ident . '=' Exp                             (rule 11)
	Exp4 -> Ident .                                     (rule 24)

	'*'            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'/'            reduce using rule 24
	';'            reduce using rule 24
	'='            shift, and enter state 31
	%eof           reduce using rule 24


State 24

	ListStmt -> Stmt .                                  (rule 14)
	ListStmt -> Stmt . ';' ListStmt                     (rule 15)

	';'            shift, and enter state 30
	%eof           reduce using rule 14


State 25

	%start_pListStmt -> ListStmt .                      (rule 2)

	%eof           accept


State 26

	Stmt -> Exp .                                       (rule 12)

	';'            reduce using rule 12
	%eof           reduce using rule 12


State 27

	%start_pStmt -> Stmt .                              (rule 1)

	%eof           accept


State 28

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 29

	Program -> ListStmt .                               (rule 10)

	%eof           reduce using rule 10


State 30

	ListStmt -> Stmt ';' . ListStmt                     (rule 15)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18
	%eof           reduce using rule 13

	Ident          goto state 23
	Integer        goto state 11
	Stmt           goto state 24
	ListStmt       goto state 43
	Exp1           goto state 12
	Exp2           goto state 13
	Exp3           goto state 14
	Exp4           goto state 15
	Exp            goto state 26

State 31

	Stmt -> Ident '=' . Exp                             (rule 11)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Exp1           goto state 12
	Exp2           goto state 13
	Exp3           goto state 14
	Exp4           goto state 15
	Exp            goto state 42

State 32

	Exp2 -> Exp2 '-' . Exp3                             (rule 18)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Exp3           goto state 41
	Exp4           goto state 15

State 33

	Exp3 -> Exp3 '*' . Exp4                             (rule 20)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Exp4           goto state 40

State 34

	Exp3 -> Exp3 '/' . Exp4                             (rule 21)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Exp4           goto state 39

State 35

	Exp4 -> '(' Exp . ')'                               (rule 25)

	')'            shift, and enter state 38


State 36

	Exp1 -> Exp2 '+' . Exp1                             (rule 16)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Exp1           goto state 37
	Exp2           goto state 13
	Exp3           goto state 14
	Exp4           goto state 15

State 37

	Exp1 -> Exp2 '+' Exp1 .                             (rule 16)

	')'            reduce using rule 16
	';'            reduce using rule 16
	%eof           reduce using rule 16


State 38

	Exp4 -> '(' Exp ')' .                               (rule 25)

	')'            reduce using rule 25
	'*'            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'/'            reduce using rule 25
	';'            reduce using rule 25
	%eof           reduce using rule 25


State 39

	Exp3 -> Exp3 '/' Exp4 .                             (rule 21)

	')'            reduce using rule 21
	'*'            reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'/'            reduce using rule 21
	';'            reduce using rule 21
	%eof           reduce using rule 21


State 40

	Exp3 -> Exp3 '*' Exp4 .                             (rule 20)

	')'            reduce using rule 20
	'*'            reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'/'            reduce using rule 20
	';'            reduce using rule 20
	%eof           reduce using rule 20


State 41

	Exp2 -> Exp2 '-' Exp3 .                             (rule 18)
	Exp3 -> Exp3 . '*' Exp4                             (rule 20)
	Exp3 -> Exp3 . '/' Exp4                             (rule 21)

	')'            reduce using rule 18
	'*'            shift, and enter state 33
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'/'            shift, and enter state 34
	';'            reduce using rule 18
	%eof           reduce using rule 18


State 42

	Stmt -> Ident '=' Exp .                             (rule 11)

	';'            reduce using rule 11
	%eof           reduce using rule 11


State 43

	ListStmt -> Stmt ';' ListStmt .                     (rule 15)

	%eof           reduce using rule 15


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 27
Number of terminals: 10
Number of non-terminals: 18
Number of states: 44
